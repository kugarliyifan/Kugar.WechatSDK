<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kugar.WechatSDK.MP</name>
    </assembly>
    <members>
        <member name="P:Kugar.WechatSDK.MP.Entities.MPMenuBase.Name">
            <summary>
            菜单标题，不超过16个字节，子菜单不超过60个字节
            </summary>
        </member>
        <member name="T:Kugar.WechatSDK.MP.Entities.MPMainMenu">
            <summary>
            主菜单按钮
            </summary>
        </member>
        <member name="P:Kugar.WechatSDK.MP.Entities.MPMainMenu.SubMenus">
            <summary>
            二级菜单数组，个数应为1~5个
            </summary>
        </member>
        <member name="P:Kugar.WechatSDK.MP.Entities.MPFunctionBase.Type">
            <summary>
            按钮类型
            </summary>
        </member>
        <member name="P:Kugar.WechatSDK.MP.Entities.MPFunctionWithKeyButton.Key">
            <summary>
            菜单KEY值，用于消息接口推送，不超过128字节
            </summary>
        </member>
        <member name="P:Kugar.WechatSDK.MP.Entities.UrlViewButton.Url">
            <summary>
            网页 链接，用户点击菜单可打开链接，不超过1024字节
            </summary>
        </member>
        <member name="P:Kugar.WechatSDK.MP.Entities.MiniProgramButton.Url">
            <summary>
            不支持小程序的老版本客户端将打开本url。
            </summary>
        </member>
        <member name="P:Kugar.WechatSDK.MP.Entities.MiniProgramButton.AppID">
            <summary>
            小程序的appid（仅认证公众号可配置）
            </summary>
        </member>
        <member name="P:Kugar.WechatSDK.MP.Entities.MiniProgramButton.PagePath">
            <summary>
            小程序的页面路径
            </summary>
        </member>
        <member name="T:Kugar.WechatSDK.MP.Entities.ScanCodeAndWaitMsgButton">
            <summary>
            扫码带提示,,扫码推事件且弹出“消息接收中”提示框用户点击按钮后，微信客户端将调起扫一扫工具，完成扫码操作后，将扫码的结果传给开发者，同时收起扫一扫工具，然后弹出“消息接收中”提示框，随后可能会收到开发者下发的消息。
            </summary>
        </member>
        <member name="T:Kugar.WechatSDK.MP.Entities.ScanCodeAndPushButton">
            <summary>
            扫码推事件,,扫码推事件用户点击按钮后，微信客户端将调起扫一扫工具，完成扫码操作后显示扫描结果（如果是URL，将进入URL），且会将扫码的结果传给开发者，开发者可以下发消息
            </summary>
        </member>
        <member name="T:Kugar.WechatSDK.MP.Entities.PicSysPhotoButton">
            <summary>
            系统拍照发图,弹出系统拍照发图用户点击按钮后，微信客户端将调起系统相机，完成拍照操作后，会将拍摄的相片发送给开发者，并推送事件给开发者，同时收起系统相机，随后可能会收到开发者下发的消息。
            </summary>
        </member>
        <member name="T:Kugar.WechatSDK.MP.Entities.PhotoOrAlbumButton">
            <summary>
            拍照或者相册发图,弹出拍照或者相册发图用户点击按钮后，微信客户端将弹出选择器供用户选择“拍照”或者“从手机相册选择”。用户选择后即走其他两种流程。
            </summary>
        </member>
        <member name="T:Kugar.WechatSDK.MP.Entities.WeixinPicButton">
            <summary>
            微信相册发图,,弹出微信相册发图器用户点击按钮后，微信客户端将调起微信相册，完成选择操作后，将选择的相片发送给开发者的服务器，并推送事件给开发者，同时收起相册
            </summary>
        </member>
        <member name="T:Kugar.WechatSDK.MP.Entities.LocationSelectButton">
            <summary>
            发送位置,,弹出地理位置选择器用户点击按钮后，微信客户端将调起地理位置选择工具，完成选择操作后，将选择的地理位置发送给开发者的服务器，同时收起位置选择工具
            </summary>
        </member>
        <member name="T:Kugar.WechatSDK.MP.Entities.MediaButton">
            <summary>
            图片,专门给第三方平台旗下未微信认证（具体而言，是资质认证未通过）的订阅号准备的事件类型，它们是没有事件推送的，能力相对受限，其他类型的公众号不必使用
            </summary>
        </member>
        <member name="P:Kugar.WechatSDK.MP.Entities.MediaButton.MediaID">
            <summary>
            调用新增永久素材接口返回的合法media_id
            </summary>
        </member>
        <member name="T:Kugar.WechatSDK.MP.Entities.ViewLimitedButton">
            <summary>
            图文消息,门给第三方平台旗下未微信认证（具体而言，是资质认证未通过）的订阅号准备的事件类型，它们是没有事件推送的，能力相对受限，其他类型的公众号不必使用
            </summary>
        </member>
        <member name="P:Kugar.WechatSDK.MP.Entities.ViewLimitedButton.MediaID">
            <summary>
            调用新增永久素材接口返回的合法media_id
            </summary>
        </member>
        <member name="M:Kugar.WechatSDK.MP.IJsTicketContainer.GetJsTicket(System.String)">
            <summary>
            获取JsTicket
            </summary>
            <param name="appID"></param>
            <returns></returns>
        </member>
        <member name="M:Kugar.WechatSDK.MP.JsTicketContainer.GetJsTicket(System.String)">
            <summary>
            获取JsTicket
            </summary>
            <param name="appID"></param>
            <returns></returns>
        </member>
        <member name="T:Kugar.WechatSDK.MP.IOAuthService">
            <summary>
            用户授权以及用户信息功能
            </summary>
        </member>
        <member name="M:Kugar.WechatSDK.MP.IOAuthService.BuildOAuthUrl(System.String,System.String,Kugar.WechatSDK.MP.Enums.SnsapiType,System.String)">
            <summary>
            构造网页授权跳转的Url
            </summary>
            <param name="appID"></param>
            <param name="redirect_uri">重定向后跳转的地址</param>
            <param name="type">授权类型</param>
            <param name="state">附带数据</param>
            <returns></returns>
        </member>
        <member name="M:Kugar.WechatSDK.MP.IOAuthService.GetAccessToken(System.String,System.String)">
            <summary>
            通过网页跳转后获取到的code,取得用户openID
            </summary>
            <param name="appID"></param>
            <param name="code">授权跳转后,传入的code值</param>
            <returns></returns>
        </member>
        <member name="M:Kugar.WechatSDK.MP.IOAuthService.RefreshAccessToken(System.String,System.String)">
            <summary>
            用于刷新用户的accesstoken
            </summary>
            <param name="appID"></param>
            <param name="accessToken">从GetAccessToken函数中返回的accesstoken</param>
            <returns></returns>
        </member>
        <member name="M:Kugar.WechatSDK.MP.IOAuthService.IsAccessTokenValidate(System.String,System.String,System.String)">
            <summary>
            检验授权凭证（access_token）是否有效
            </summary>
            <param name="appID"></param>
            <param name="openID"></param>
            <param name="accessToken">用户的accessToken</param>
            <returns></returns>
        </member>
        <member name="T:Kugar.WechatSDK.MP.OAuthService">
            <summary>
            用户授权以及用户信息功能
            </summary>
        </member>
        <member name="M:Kugar.WechatSDK.MP.OAuthService.BuildOAuthUrl(System.String,System.String,Kugar.WechatSDK.MP.Enums.SnsapiType,System.String)">
            <summary>
            构造网页授权跳转的Url
            </summary>
            <param name="appID"></param>
            <param name="redirect_uri">重定向后跳转的地址</param>
            <param name="type">授权类型</param>
            <param name="state">附带数据</param>
            <returns></returns>
        </member>
        <member name="M:Kugar.WechatSDK.MP.OAuthService.GetAccessToken(System.String,System.String)">
            <summary>
            通过网页跳转后获取到的code,取得用户openID
            </summary>
            <param name="appID"></param>
            <param name="code">授权跳转后,传入的code值</param>
            <returns></returns>
        </member>
        <member name="M:Kugar.WechatSDK.MP.OAuthService.RefreshAccessToken(System.String,System.String)">
            <summary>
            用于刷新用户的accesstoken
            </summary>
            <param name="appID"></param>
            <param name="accessToken">从GetAccessToken函数中返回的accesstoken</param>
            <returns></returns>
        </member>
        <member name="M:Kugar.WechatSDK.MP.OAuthService.IsAccessTokenValidate(System.String,System.String,System.String)">
            <summary>
            检验授权凭证（access_token）是否有效
            </summary>
            <param name="appID"></param>
            <param name="openID"></param>
            <param name="accessToken">用户的accessToken</param>
            <returns></returns>
        </member>
        <member name="M:Kugar.WechatSDK.MP.UIService.CreateJsUIArgument(System.String,System.String)">
            <summary>
            获取UI注入所使用的参数
            </summary>
            <param name="appID"></param>
            <param name="url">当前页链接</param>
            <returns></returns>
        </member>
        <member name="M:Kugar.WechatSDK.MP.UIService.CreateJsUIConfigScript(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            生成Js配置调用配置的js脚本wx.config({注入参数}) 的脚本
            </summary>
            <param name="appID"></param>
            <param name="url">当前页面url,需带域名</param>
            <param name="functions">可使用的接口,参考:https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#4 的附录2</param>
            <returns></returns>
        </member>
    </members>
</doc>
